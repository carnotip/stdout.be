---
layout: post
language: en
categories:
    - coding
tags:
    - en
    - project management
    - information architecture for news websites
    - zope
    - education
title: Happy birthday, CoffeeScript
summary:
    CoffeeScript is a great language, but more than that, it's an invitation to think and dream about our ideal developer experience. And then to make that dream into a reality.
---

Yesterday, "Jeremy Ashkenas":http://ashkenas.com/ gave all of us a little Christmas present and "released CoffeeScript 1.0":http://news.ycombinator.com/item?id=2037801 , precisely one year after its first release, 0.1.

CoffeeScript is a language inspired on Python and Ruby, which compiles into Javascript. Yes, Javascript.

The language itself is wonderful: it feels like the best parts of Python and Ruby thrown together. More OO than Python. Not filled with sigils like Ruby, or, god forbid, Perl. Terse, but readable. Meaningful whitespace. Groovy-like "safe navigation":http://groovy.codehaus.org/Operators#Operators-SafeNavigationOperator%28%3F.%29 . And a lot of stuff that should have been in Javascript a long time ago, but isn't: comprehensions ("well...":http://en.wikipedia.org/wiki/List_comprehension#Javascript_1.8), string formatting, default arguments, heck, even a better syntax for multiline strings.

But it's not really about the language. Not entirely, anyway.

bq. CoffeeScript isn’t an appropriate JavaScript-Next candidate, because it doesn’t go far enough: it’s entirely limited to what’s possible to achieve on lowest-common-denominator JS engines. Which, in practice, means that it’s limited to all the quirks and bugs of JScript in IE6. ("Jeremy Ashkenas over at Sam Ruby's blog":http://intertwingly.net/blog/2010/11/25/Hobgoblin-of-Little-Minds)

CoffeeScript is exciting because of what the language _means_ for web development.

In tandem with "node.js":http://nodejs.org or "Rhino":https://developer.mozilla.org/en/Rhino , Javascript already gave us the opportunity to code an entire web application, back-end and front-end, in one language. Replace Javascript with CoffeeScript, and now you can _actually enjoy the process_ . CoffeeScript is a language you'll actually willingly code in, not just because you have to.

But a one-language stack is not what's so exciting either. More than that, the CoffeeScript/Node combo is an opportunity for our generation to create a programming language ecosystem that's exactly the way we want it to be. As Alex Payne acutely observed this summer, a software project can be exciting for more than just technical reasons. Technically, Node is "asynchronous":http://en.wikipedia.org/wiki/Asynchronous_I/O to the bone. And that's neat, but really, synchronous programming was working out just fine for most of us most of the time. Projects like CoffeeScript and node.js speak to our imagination because

bq. People in the Node community are having a good time reinventing the familiar wheels of web frameworks, package management, testing libraries, etc., and I don’t begrudge them that. Every programming community reinvents those things to their norms. ("Alex Payne":http://al3x.net/2010/07/27/node.html)

Because sometimes, reinventing stuff actually _does_ make sense. And it's fun, even for those of us only participating on the sidelines. It's a hype, but it's a good kind of hype.

The ecosystem that surrounds Javascript lacks a standard library, heck, even lacks firm standards for loading modules or reading from files. And that's actually a good thing. It gets us "thinking":http://www.commonjs.org/. It's an invitation to start coding. To reimagine what "package management":http://npmjs.org/ should mean, how deployment should work, what a web framework should look like in 2011. To create new and better interfaces for pedestrian functionality like an "HTTP library":https://github.com/danwrong/restler. We might end up repeating a lot of past mistakes, we might go down the wrong path here and there, but along the way, we'll learn. The way we do web development will be better for it.

So, if you find yourself with some idle time in between end-of-year festivities, read through the docs at "http://jashkenas.github.com/coffee-script/":http://jashkenas.github.com/coffee-script/ , get cracking on a @<script type="text/coffeescript">@ script in the browser, an "express.js":http://expressjs.com/ app in node.js, or a "CoffeeApp":https://github.com/andrzejsliwa/coffeeapp.

Enjoy.